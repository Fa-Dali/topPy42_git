'''
–ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —É —Ç–µ–±—è –µ—Å—Ç—å –≤–æ–ª—à–µ–±–Ω—ã–µ —á–∞—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ —É–º–µ—é—Ç –∑–∞–ø–æ–º–∏–Ω–∞—Ç—å –ª—é–±–æ–µ
–≤—Ä–µ–º—è –∏ –ª—é–±—É—é –¥–∞—Ç—É. –≠—Ç–æ –∏ –µ—Å—Ç—å –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ `datetime` –≤ Python.

üìÖ üï∞Ô∏è

–í Python –µ—Å—Ç—å —Å–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –∫–æ—Ä–æ–±–∫–∞ (–±–∏–±–ª–∏–æ—Ç–µ–∫–∞), –∫–æ—Ç–æ—Ä–∞—è –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è `datetime`.
–û–Ω–∞ –ø–æ–º–æ–≥–∞–µ—Ç –∫–æ–º–ø—å—é—Ç–µ—Ä—É –∑–∞–ø–æ–º–Ω–∏—Ç—å –∏ –ø–æ—Å—á–∏—Ç–∞—Ç—å –¥–∞—Ç—ã –∏ –≤—Ä–µ–º—è. –î–∞–≤–∞–π —Ä–∞–∑–±–µ—Ä–µ–º—Å—è,
–∫–∞–∫ –æ–Ω–∞ —É—Å—Ç—Ä–æ–µ–Ω–∞:

### –ß—Ç–æ —É–º–µ–µ—Ç —ç—Ç–∞ –º–∞–≥–∏—á–µ—Å–∫–∞—è –∫–æ—Ä–æ–±–æ—á–∫–∞?

‚ú® **–û–Ω–∞ —Ö—Ä–∞–Ω–∏—Ç –¥–Ω–∏ –∏ –º–∏–Ω—É—Ç—ã:**
–ú–æ–∂–µ—Ç –∑–∞–ø–æ–º–Ω–∏—Ç—å —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å, –≤—á–µ—Ä–∞—à–Ω–∏–π –¥–µ–Ω—å –∏–ª–∏
–¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è —Ç–≤–æ–µ–π –±–∞–±—É—à–∫–∏.

‚è≥ **–ü–æ–º–æ–≥–∞–µ—Ç —Å—á–∏—Ç–∞—Ç—å –≤—Ä–µ–º—è:**
–£–∑–Ω–∞—Ç—å, —Å–∫–æ–ª—å–∫–æ –ø—Ä–æ—à–ª–æ —á–∞—Å–æ–≤ –∏–ª–∏ –º–∏–Ω—É—Ç –º–µ–∂–¥—É —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–º —É—Ç—Ä–æ–º –∏ –≤–µ—á–µ—Ä–æ–º.

üî• **–î–µ–ª–∞–µ—Ç –∫–∞–ª–µ–Ω–¥–∞—Ä—å:**
–ó–Ω–∞–µ—Ç, —Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π –≤ –º–µ—Å—è—Ü–µ, –∫–∞–∫–æ–π –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ.

### –ü–æ—Å–º–æ—Ç—Ä–∏–º –Ω–∞ –ø—Ä–æ—Å—Ç—ã–µ –∫–æ–º–∞–Ω–¥—ã:

1. **–°–µ–≥–æ–¥–Ω—è—à–Ω—è—è –¥–∞—Ç–∞:**
'''
today = datetime.date.today()
print(today)
'''
    –≠—Ç–æ –∑–Ω–∞—á–∏—Ç: —Å–ø—Ä–æ—Å–∏ —É –∫–æ–º–ø—å—é—Ç–µ—Ä–∞, –∫–∞–∫–æ–π —Å–µ–≥–æ–¥–Ω—è –¥–µ–Ω—å.

2. **–¢–æ—á–Ω–æ–µ –≤—Ä–µ–º—è:**  
'''
now = datetime.datetime.now()
print(now)
'''
    –°–ø—Ä–∞—à–∏–≤–∞–µ—Ç –∫–æ–º–ø—å—é—Ç–µ—Ä —Ç–æ—á–Ω–æ–µ –≤—Ä–µ–º—è –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å.

3. **–ü–æ—Å—á–∏—Ç–∞—Ç—å —Ä–∞–∑–Ω–∏—Ü—É –º–µ–∂–¥—É –¥–∞—Ç–∞–º–∏:**  
    –ù–∞–ø—Ä–∏–º–µ—Ä, —É–∑–Ω–∞—Ç—å, —Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π –æ—Å—Ç–∞–ª–æ—Å—å –¥–æ –ù–æ–≤–æ–≥–æ –ì–æ–¥–∞:
'''
new_year = datetime.date(2025, 1, 1)
days_left = new_year - today
print(days_left.days)
'''

### –ó–∞—á–µ–º —ç—Ç–æ –Ω—É–∂–Ω–æ?

- –£–∑–Ω–∞—Ç—å –≤–æ–∑—Ä–∞—Å—Ç –∫–æ–≥–æ-—Ç–æ: "–ö–∞–∫–æ–π —Ç–≤–æ–π –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è?" ‚û°Ô∏è –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å, 
—Å–∫–æ–ª—å–∫–æ –ª–µ—Ç –∏—Å–ø–æ–ª–Ω–∏–ª–æ—Å—å.
- –°–¥–µ–ª–∞—Ç—å —Ç–∞–π–º–µ—Ä: "–ß–µ—Ä–µ–∑ –ø—è—Ç—å –º–∏–Ω—É—Ç –∑–≤–æ–Ω–∏ –º–Ω–µ!"
- –°–ª–µ–¥–∏—Ç—å –∑–∞ —Å—Ä–æ–∫–∞–º–∏ —É—Ä–æ–∫–æ–≤ –∏–ª–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π: "–î–æ –Ω–∞—á–∞–ª–∞ –∫–∞–Ω–∏–∫—É–ª –æ—Å—Ç–∞–ª–æ—Å—å..."

### –ü—Ä–æ—Å—Ç–æ–π –≤—ã–≤–æ–¥:  
–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ `datetime` ‚Äî —ç—Ç–æ –∫–∞–∫ —É–º–Ω—ã–µ —á–∞—Å—ã –∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—å –≤ –æ–¥–Ω–æ–º —Ñ–ª–∞–∫–æ–Ω–µ. 
–û–Ω–∞ —É–º–µ–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å –∏ —Å—á–∏—Ç–∞—Ç—å –¥–∞—Ç—ã –∏ –≤—Ä–µ–º—è, –ø–æ–º–æ–≥–∞—è —Ä–µ—à–∞—Ç—å –∫—É—á—É –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –∑–∞–¥–∞—á.

========================================================================
        –í–°–ï –ú–ï–¢–û–î–´ –†–ê–ë–û–¢–´ –° datetime
========================================================================

–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ `datetime` –≤ Python –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –º–æ—â–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã 
—Å –¥–∞—Ç–∞–º–∏ –∏ –≤—Ä–µ–º–µ–Ω–µ–º. –ù–∏–∂–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω –æ–±–∑–æ—Ä –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–ª–∞—Å—Å–æ–≤ –∏ –º–µ—Ç–æ–¥–æ–≤, 
–ø–æ–∑–≤–æ–ª—è—é—â–∏—Ö –º–∞–Ω–∏–ø—É–ª–∏—Ä–æ–≤–∞—Ç—å –¥–∞—Ç–∞–º–∏, –≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞–º–∏ –∏ –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω—ã–º–∏ 
–æ–ø–µ—Ä–∞—Ü–∏—è–º–∏.

### –û—Å–Ω–æ–≤–Ω—ã–µ –∫–ª–∞—Å—Å—ã –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ `datetime`

1. **`datetime.date`**  
   –ö–ª–∞—Å—Å –¥–ª—è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –¥–∞—Ç—ã (–¥–µ–Ω—å, –º–µ—Å—è—Ü, –≥–æ–¥).

2. **`datetime.time`**  
   –ö–ª–∞—Å—Å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫ (—á–∞—Å, –º–∏–Ω—É—Ç–∞, —Å–µ–∫—É–Ω–¥–∞, –º–∏–∫—Ä–æ—Å–µ–∫—É–Ω–¥—ã).

3. **`datetime.datetime`**  
   –û–±—ä–µ–¥–∏–Ω—è–µ—Ç –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –≤ –æ–¥–Ω–æ —Ü–µ–ª–æ–µ.

4. **`datetime.timedelta`**  
   –û–±—ä–µ–∫—Ç –¥–ª—è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ –≤—Ä–µ–º–µ–Ω–∏ (—Ä–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É –¥–≤—É–º—è –¥–∞—Ç–∞–º–∏ 
   –∏–ª–∏ –≤—Ä–µ–º–µ–Ω–∞–º–∏).

5. **`datetime.tzinfo`**  
   –ê–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–π –∫–ª–∞—Å—Å –¥–ª—è –≤—Ä–µ–º–µ–Ω–Ω–æ–π –∑–æ–Ω—ã (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ä–µ–¥–∫–æ).

### –ö–ª—é—á–µ–≤—ã–µ –º–µ—Ç–æ–¥—ã –∏ —Å–≤–æ–π—Å—Ç–≤–∞

#### 1. **–°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤ –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏**
- **`today()`**  
  –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â—É—é –ª–æ–∫–∞–ª—å–Ω—É—é –¥–∞—Ç—É (–±–µ–∑ –≤—Ä–µ–º–µ–Ω–∏).
'''
date_today = datetime.date.today()
'''
- **`now()`**  
  –ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è (–ª–æ–∫–∞–ª—å–Ω–æ –∏–ª–∏ —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–π –∑–æ–Ω—ã).
'''
current_time = datetime.datetime.now()
'''
- **`utcnow()`**  
–ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è UTC (Universal Time Coordinated).
'''
utc_current_time = datetime.datetime.utcnow()
'''
- **`fromtimestamp(timestamp)`**  
–°–æ–∑–¥–∞–µ—Ç –æ–±—ä–µ–∫—Ç –¥–∞—Ç—ã/–≤—Ä–µ–º–µ–Ω–∏ –∏–∑ Unix timestamp (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ–∫—É–Ω–¥ —Å 1 —è–Ω–≤–∞—Ä—è 1970 –≥–æ–¥–∞).
'''
dt = datetime.datetime.fromtimestamp(1672531200)
'''
- **`combine(date, time)`**  
–û–±—ä–µ–¥–∏–Ω—è–µ—Ç –æ—Ç–¥–µ–ª—å–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏ –≤ –æ–¥–∏–Ω –æ–±—ä–µ–∫—Ç `datetime`.
'''
combined_dt = datetime.datetime.combine(some_date, some_time)
'''
- **`strftime(format)`**  
–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –≤ —Å—Ç—Ä–æ–∫—É –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É —Ñ–æ—Ä–º–∞—Ç—É.
'''
formatted_string = dt.strftime("%Y-%m-%d %H:%M:%S")
'''
- **`strptime(string, format)`**  
–ü–∞—Ä—Å–∏—Ç —Å—Ç—Ä–æ–∫—É –≤ –æ–±—ä–µ–∫—Ç –¥–∞—Ç—ã/–≤—Ä–µ–º–µ–Ω–∏ –ø–æ –∑–∞–¥–∞–Ω–Ω–æ–º—É —Ñ–æ—Ä–º–∞—Ç—É.
'''
parsed_dt = datetime.datetime.strptime('2023-12-31', "%Y-%m-%d")
'''

#### 2. **–û–ø–µ—Ä–∞—Ü–∏–∏ —Å –æ–±—ä–µ–∫—Ç–∞–º–∏ –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏**
- **`replace(year=None, month=None, day=None, hour=None, minute=None, second=None, microsecond=None, tzinfo=True, fold=False)`**  
–ó–∞–º–µ—â–∞–µ—Ç –ø–æ–ª—è –æ–±—ä–µ–∫—Ç–∞ –¥–∞—Ç—ã/–≤—Ä–µ–º–µ–Ω–∏ –Ω–æ–≤—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏.
'''
new_dt = old_dt.replace(hour=12)
'''
- **`timetuple()`**  
–ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –æ–±—ä–µ–∫—Ç –¥–∞—Ç—ã/–≤—Ä–µ–º–µ–Ω–∏ –≤ –∫–æ—Ä—Ç–µ–∂ —Ñ–æ—Ä–º–∞—Ç–∞ struct_time.
'''
tuple_representation = dt.timetuple()
'''
- **`timestamp()`**  
–ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –æ–±—ä–µ–∫—Ç –¥–∞—Ç—ã/–≤—Ä–µ–º–µ–Ω–∏ –≤ Unix timestamp (—Å–µ–∫—É–Ω–¥—ã —Å —ç–ø–æ—Ö–∏).
'''
unix_timestamp = dt.timestamp()
'''
- **`weekday()`**  
–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–º–µ—Ä –¥–Ω—è –Ω–µ–¥–µ–ª–∏ (0 ‚Äî –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫, ..., 6 ‚Äî –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ).
'''
weekday_number = dt.weekday()
'''
- **`isoweekday()`**  
–ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ `weekday()`, –Ω–æ –Ω—É–º–µ—Ä–∞—Ü–∏—è –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 1 (–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫).
'''
iso_weekday = dt.isoweekday()
'''
- **`ctime()`**  
–§–æ—Ä–º–∏—Ä—É–µ—Ç —É–¥–æ–±–æ—á–∏—Ç–∞–µ–º—É—é —Å—Ç—Ä–æ–∫—É –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏.
'''
readable_string = dt.ctime()
'''

#### 3. **–†–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É –¥–∞—Ç–∞–º–∏ –∏ –≤—Ä–µ–º–µ–Ω–µ–º (`timedelta`)**
- **`total_seconds()`**  
–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ–∫—É–Ω–¥ –≤ timedelta.
'''
diff_in_seconds = delta.total_seconds()
'''
- **`days`**  
–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –≤ timedelta.
'''
number_of_days = delta.days
'''
- **`seconds`**  
–ß–∏—Å–ª–æ —Å–µ–∫—É–Ω–¥ –≤ timedelta (–º–µ–Ω–µ–µ —Å—É—Ç–æ–∫).
'''
seconds_part = delta.seconds
'''
- **`microseconds`**  
–ú–∏–∫—Ä–æ—Å–µ–∫—É–Ω–¥–Ω–∞—è —Å–æ—Å—Ç–∞–≤–ª—è—é—â–∞—è timedelta.
'''
microseconds_part = delta.microseconds
'''

### –¢–∏–ø–∏—á–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
1. **–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤–æ–∑—Ä–∞—Å—Ç–∞ –ø–æ –¥–∞—Ç–µ —Ä–æ–∂–¥–µ–Ω–∏—è:**
'''
 birth_date = datetime.date(1990, 1, 1)
 age = datetime.date.today().year - birth_date.year
'''
2. **–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã –≤ —É–¥–æ–±–æ—á–∏—Ç–∞–µ–º—ã–π –≤–∏–¥:**
'''
event_date = datetime.datetime(2023, 12, 31, 23, 59)
formatted_event = event_date.strftime('%A, %B %d, %Y at %I:%M%p')
'''
3. **–†–∞—Å—á–µ—Ç —Ä–∞–∑–Ω–∏—Ü—ã –º–µ–∂–¥—É –¥–≤—É–º—è –¥–∞—Ç–∞–º–∏:**
'''
first_day = datetime.date(2023, 1, 1)
last_day = datetime.date(2023, 12, 31)
difference = last_day - first_day
print(difference.days)
'''

–≠—Ç–∏ –º–µ—Ç–æ–¥—ã –ø–æ–∫—Ä—ã–≤–∞—é—Ç –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω—ã—Ö –∑–∞–¥–∞—á, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å 
–º–∞–Ω–∏–ø—É–ª—è—Ü–∏–µ–π –¥–∞—Ç–∞–º–∏ –∏ –≤—Ä–µ–º–µ–Ω–µ–º –≤ Python.


–î–∞, –∫–æ–Ω–µ—á–Ω–æ! –ü–æ–º–∏–º–æ —Ç–µ—Ö –º–µ—Ç–æ–¥–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —è –æ–ø–∏—Å–∞–ª —Ä–∞–Ω–µ–µ, –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ 
`datetime` –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –µ—â—ë –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ–ª–µ–∑–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤ –∏ —Å–≤–æ–π—Å—Ç–≤, 
–∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏–≥–æ–¥—è—Ç—Å—è –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –¥–∞—Ç–∞–º–∏ –∏ –≤—Ä–µ–º–µ–Ω–µ–º. –†–∞—Å—à–∏—Ä—é –ø—Ä–µ–¥—ã–¥—É—â—É—é 
–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏.

### –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –∏ —Å–≤–æ–π—Å—Ç–≤–∞
#### 1. **–§–æ—Ä–º–∞—Ç—ã –≤—ã–≤–æ–¥–∞ –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏**
- **`isoformat()`**  
  –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–∞—Ç—ã –∏–ª–∏ –≤—Ä–µ–º–µ–Ω–∏ –≤ ISO-—Ñ–æ—Ä–º–∞—Ç–µ 
  (—Å—Ç–∞–Ω–¥–∞—Ä—Ç ISO 8601).
'''
dt = datetime.datetime.now()
iso_formatted = dt.isoformat()
'''
- **`astimezone(timezone)`**  
  –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –æ–±—ä–µ–∫—Ç `datetime` –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–π —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å (–≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 
  –∫–æ–ø–∏—é —Å –Ω–æ–≤—ã–º –æ–±—ä–µ–∫—Ç–æ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–π –∑–æ–Ω—ã).
'''
local_time = datetime.datetime.now()
utc_time = local_time.astimezone(datetime.timezone.utc)
'''
- **`utcoffset()`**  
  –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–º–µ—â–µ–Ω–∏–µ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ UTC (–¥–ª—è –æ–±—ä–µ–∫—Ç–æ–≤ —Å –≤—Ä–µ–º–µ–Ω–Ω–æ–π –∑–æ–Ω–æ–π).
'''
offset = dt.utcoffset()
'''
- **`tzname()`**  
  –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–º—è –≤—Ä–µ–º–µ–Ω–Ω–æ–π –∑–æ–Ω—ã (–µ—Å–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ).
'''
timezone_name = dt.tzname()
'''
- **`dst()`**  
  –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–µ—Ä–µ—Ö–æ–¥–µ –Ω–∞ –ª–µ—Ç–Ω–µ–µ –≤—Ä–µ–º—è (DST, Daylight Saving Time).
'''
daylight_saving = dt.dst()
'''

#### 2. **–†–∞–∑–±–æ—Ä –∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –º–µ—Ç–æ–∫**

- **`toordinal()`**  
  –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –¥–∞—Ç—É –≤ —á–∏—Å–ª–æ –¥–Ω–µ–π —Å –º–æ–º–µ–Ω—Ç–∞ —É—Å–ª–æ–≤–Ω–æ–≥–æ –Ω—É–ª—è 
  (1 —è–Ω–≤–∞—Ä—è 1 –≥–æ–¥–∞).
'''
ordinal_value = dt.toordinal()
'''
- **`fromordinal(day_number)`**  
  –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —á–∏—Å–ª–æ –¥–Ω–µ–π –æ–±—Ä–∞—Ç–Ω–æ –≤ –¥–∞—Ç—É.
'''
original_date = datetime.date.fromordinal(ordinal_value)
'''
- **`utctimetuple()`**  
  –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –≤—Ä–µ–º–µ–Ω–∏ –≤ –≤–∏–¥–µ –∫–æ—Ä—Ç–µ–∂–∞ –¥–ª—è UTC.
'''
utc_tuple = dt.utcnow().utctimetuple()
'''
- **`fold`**  
  –ü–∞—Ä–∞–º–µ—Ç—Ä, –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–π –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ–±—ä–µ–∫—Ç–æ–≤ —Å –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π 
  –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ DST (–ª–µ—Ç–Ω–µ–º –≤—Ä–µ–º–µ–Ω–∏); –ø–æ–º–æ–≥–∞–µ—Ç –≤—ã–±—Ä–∞—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ 
  –≤—Ä–µ–º—è –≤ —Å–ª—É—á–∞—è—Ö –¥–≤—É—Å–º—ã—Å–ª–µ–Ω–Ω–æ—Å—Ç–∏.
'''
ambiguous_dt = datetime.datetime(2023, 10, 29, 2, 30, fold=1)
'''

#### 3. **–ú–∞–Ω–∏–ø—É–ª—è—Ü–∏–∏ —Å –≤—Ä–µ–º–µ–Ω–Ω–æ–π –∑–æ–Ω–æ–π**

- **`timezone.utc`**  
  –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –æ–±—ä–µ–∫—Ç –≤—Ä–µ–º–µ–Ω–Ω–æ–π –∑–æ–Ω—ã UTC.
'''
utc_zone = datetime.timezone.utc
'''
- **`pytz` (—Å—Ç–æ—Ä–æ–Ω–Ω—è—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞)**  
  –ß–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —É–¥–æ–±–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å —á–∞—Å–æ–≤—ã–º–∏ –ø–æ—è—Å–∞–º–∏ –∏ 
  –ø–µ—Ä–µ—Ö–æ–¥–∞–º–∏ –Ω–∞ –ª–µ—Ç–Ω–µ–µ –≤—Ä–µ–º—è.
'''
from pytz import timezone
moscow_tz = timezone('Europe/Moscow')
localized_dt = dt.astimezone(moscow_tz)
'''

### –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è

1. **–û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –±–ª–∏–∂–∞–π—à–∏–π —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å 
(–∏—Å–∫–ª—é—á–∞—è —Å—É–±–±–æ—Ç—É –∏ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ):**
'''
def next_workday(dt):
   while dt.weekday() >= 5:  # –°—É–±–±–æ—Ç–∞ –∏ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ
       dt += datetime.timedelta(days=1)
   return dt

tomorrow = datetime.date.today() + datetime.timedelta(days=1)
next_business_day = next_workday(tomorrow)
'''
2. **–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –ø–æ—è—Å–∞:**
'''
ny_time = datetime.datetime.now(datetime.timezone.utc).astimezone(pytz.timezone('America/New_York'))
'''
3. **–ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –¥–∞—Ç:**
'''
birthday = datetime.date(1990, 1, 1)
if birthday > datetime.date.today():
   print("–í–∞—à –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –µ—â—ë –≤–ø–µ—Ä–µ–¥–∏!")
'''

–≠—Ç–∏ –º–µ—Ç–æ–¥—ã –∏ –ø—Ä–∏–µ–º—ã –ø–æ–º–æ–≥—É—Ç –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ –æ–±–ª–µ–≥—á–∏—Ç—å –≤–∞—à—É –∂–∏–∑–Ω—å –ø—Ä–∏ 
—É–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –≤—Ä–µ–º–µ–Ω–µ–º –∏ –¥–∞—Ç–∞–º–∏ –≤ Python. –ï—Å–ª–∏ –Ω—É–∂–Ω—ã –µ—â—ë –ø—Ä–∏–º–µ—Ä—ã –∏–ª–∏ 
—É–≥–ª—É–±–ª–µ–Ω–Ω—ã–π —Ä–∞–∑–±–æ—Ä –∫–∞–∫–æ–≥–æ-—Ç–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∞—Å–ø–µ–∫—Ç–∞, –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å!

========================================================================
            –î–õ–Ø –ú–ï–ë–ï–õ–¨–ù–û–ì–û –ë–ò–ó–ù–ï–°–ê
========================================================================

–†–∞–±–æ—Ç–∞ —Å –¥–∞—Ç–∞–º–∏ –∏ –≤—Ä–µ–º–µ–Ω–µ–º –≤–∞–∂–Ω–∞ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ –¥–ª—è –ª—é–±–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞, –∏ 
–º–µ–±–µ–ª—å–Ω–æ–µ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ –Ω–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ. –Ø –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª –¥–µ—Å—è—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö 
–ø—Ä–∏–º–µ—Ä–æ–≤ —Ç–æ–≥–æ, –∫–∞–∫ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ `datetime` –º–æ–∂–µ—Ç –ø—Ä–∏–Ω–µ—Å—Ç–∏ –ø–æ–ª—å–∑—É –≤ 
–ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–æ–π –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –º–µ–±–µ–ª—å–Ω–æ–π —Ñ–∞–±—Ä–∏–∫–∏.

### –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è `datetime` –≤ –º–µ–±–µ–ª—å–Ω–æ–º –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ

#### 1. **–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ä–æ–∫–æ–≤ –ø–æ—Å—Ç–∞–≤–æ–∫ –∫–ª–∏–µ–Ω—Ç–∞–º**
–ù—É–∂–Ω–æ —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å, —Å–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –æ—Å—Ç–∞–ª–æ—Å—å –¥–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è —Å—Ä–æ–∫–∞ 
–ø–æ—Å—Ç–∞–≤–∫–∏ –∑–∞–∫–∞–∑–∞:
'''
delivery_deadline = datetime.date(2023, 12, 31)
current_date = datetime.date.today()
remaining_days = (delivery_deadline - current_date).days
if remaining_days <= 10:
    print("–û—Å—Ç–∞–ª–æ—Å—å –º–µ–Ω—å—à–µ 10 –¥–Ω–µ–π –¥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞!")
'''
#### 2. **–û—Ü–µ–Ω–∫–∞ —Å–∫–æ—Ä–æ—Å—Ç–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞**
–†–∞—Å—Å—á–∏—Ç—ã–≤–∞—Ç—å —Å—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ –æ–¥–Ω–æ–≥–æ –∏–∑–¥–µ–ª–∏—è:
'''
order_start = datetime.datetime(2023, 10, 1)
completed_at = datetime.datetime(2023, 10, 15)
production_duration = completed_at - order_start
average_time_per_piece = production_duration / quantity
'''
#### 3. **–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∞—Å–∞–º–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤**
–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–∏—Ö–æ–¥–∞ –∏ —Ä–∞—Å—Ö–æ–¥–∞ –∑–∞–ø–∞—Å–æ–≤ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤:
'''
material_arrival = datetime.datetime.now()
expiration_date = material_arrival + datetime.timedelta(months=6)
print(f"–°—Ä–æ–∫ –≥–æ–¥–Ω–æ—Å—Ç–∏ –∏—Å—Ç–µ–∫–∞–µ—Ç {expiration_date}.")
'''
#### 4. **–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ –∑–∞–∫–∞–∑–æ–≤**
–í–µ–¥—ë—Ç—Å—è –∂—É—Ä–Ω–∞–ª –∑–∞–ø–∏—Å–µ–π —Å –æ—Ç–º–µ—Ç–∫–∞–º–∏ –≤—Ä–µ–º–µ–Ω–∏ –ø—Ä–∏–µ–º–∞ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–∫–∞–∑–æ–≤:
'''
log_entry = (f"–ü—Ä–∏–Ω—è–ª–∏ –∑–∞–∫–∞–∑ ‚Ññ1234 –≤ "
             f"{datetime.datetime.now().strftime('%Y-%m-%d %H:%M')}")
'''
#### 5. **–†–∞—Å—á—ë—Ç –≤—Ä–µ–º–µ–Ω–∏ –≥–∞—Ä–∞–Ω—Ç–∏–π–Ω–æ–≥–æ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è**
–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–∞—Ç—É –∏—Å—Ç–µ—á–µ–Ω–∏—è –≥–∞—Ä–∞–Ω—Ç–∏–∏ –Ω–∞ –ø—Ä–æ–∏–∑–≤–µ–¥—ë–Ω–Ω—É—é –º–µ–±–µ–ª—å:
'''
purchase_date = datetime.date(2023, 1, 1)
warranty_period = purchase_date + datetime.timedelta(years=2)
print(f"–í–∞—à–∞ –≥–∞—Ä–∞–Ω—Ç–∏—è –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è {warranty_period}.")
'''
#### 6. **–ê–Ω–∞–ª–∏–∑ –∑–∞–≥—Ä—É–∑–∫–∏ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è**
–ò–∑—É—á–µ–Ω–∏–µ —Å—Ä–µ–¥–Ω–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–Ω—è—Ç–æ—Å—Ç–∏ —Å—Ç–∞–Ω–∫–æ–≤ –∏ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è:
'''
machine_started = datetime.datetime(2023, 10, 1, 8, 0)
machine_stopped = datetime.datetime(2023, 10, 1, 17, 0)
downtime = machine_stopped - machine_started
print(f"–ú–∞—à–∏–Ω–∞ —Ä–∞–±–æ—Ç–∞–ª–∞ {downtime}.")
'''
#### 7. **–ö–∞–ª–µ–Ω–¥–∞—Ä—å —Ä–µ–º–æ–Ω—Ç–Ω—ã—Ö —Ä–∞–±–æ—Ç**
–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –ø–ª–∞–Ω–æ–≤–æ–≥–æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è:
'''
maintenance_schedule = [
    {"date": datetime.date(2023, 10, 15)},
    {"date": datetime.date(2023, 11, 1)}
]
for entry in maintenance_schedule:
    print(entry['date'].strftime("%d.%m.%Y"))
'''
#### 8. **–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤**
–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º –æ –ø—Ä–∏–±–ª–∏–∂–∞—é—â–µ–º—Å—è –¥–µ–¥–ª–∞–π–Ω–µ —Å–¥–∞—á–∏ 
–ø—Ä–æ–µ–∫—Ç–∞:
'''
deadline = datetime.date(2023, 12, 31)
today = datetime.date.today()
if deadline - today <= datetime.timedelta(days=7):
    print("–í–Ω–∏–º–∞–Ω–∏–µ! –°—Ä–æ–∫ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –±–ª–∏–∑–æ–∫.")
'''
#### 9. **–£–ø—Ä–∞–≤–ª—è–µ–º —Ä–∞—Å—Ö–æ–¥–Ω–∏–∫–∞–º–∏ –∏ –∑–∞–ø—á–∞—Å—Ç—è–º–∏**
–°–∏—Å—Ç–µ–º–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –Ω–∞–ª–∏—á–∏—è —Ä–∞—Å—Ö–æ–¥–Ω–∏–∫–æ–≤ –∏ –∑–∞–ø—á–∞—Å—Ç–µ–π —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–º 
—Å—Ä–æ–∫–æ–º —Å–ª—É–∂–±—ã:
'''
part_expiration = datetime.date(2023, 12, 31)
if part_expiration < datetime.date.today():
    print("–°—Ä–æ–∫ –≥–æ–¥–Ω–æ—Å—Ç–∏ –∑–∞–ø—á–∞—Å—Ç–∏ –∏—Å—Ç–µ–∫.")
'''
#### 10. **–ö–æ–Ω—Ç—Ä–æ–ª—å —Å–º–µ–Ω —Ä–∞–±–æ—á–∏—Ö**
–û—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å —Ä–æ—Ç–∞—Ü–∏—é —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤ –Ω–∞ —Å–º–µ–Ω—ã —Å —É—á—ë—Ç–æ–º –≤—Ä–µ–º–µ–Ω–∏ —Ä–∞–±–æ—Ç—ã:
'''
shift_start = datetime.datetime(2023, 10, 1, 8, 0)
shift_end = shift_start + datetime.timedelta(hours=8)
print(f"–°–º–µ–Ω–∞ –Ω–∞—á–∞–ª–∞—Å—å –≤ {shift_start} –∏ –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è –≤ {shift_end}.")
'''

–≠—Ç–∏ –ø—Ä–∏–º–µ—Ä—ã –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç, –Ω–∞—Å–∫–æ–ª—å–∫–æ –ø–æ–ª–µ–∑–Ω—ã–º –º–æ–∂–µ—Ç –æ–∫–∞–∑–∞—Ç—å—Å—è –≥—Ä–∞–º–æ—Ç–Ω–æ–µ 
–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ `datetime` –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç—ã 
–º–µ–±–µ–ª—å–Ω–æ–π —Ñ–∞–±—Ä–∏–∫–∏, –ø–æ–≤—ã—à–µ–Ω–∏—è —Ç–æ—á–Ω–æ—Å—Ç–∏ —Ä–∞—Å—á–µ—Ç–æ–≤ –∏ —É–ø–æ—Ä—è–¥–æ—á–µ–Ω–Ω–æ—Å—Ç–∏ 
–¥–∞–Ω–Ω—ã—Ö.

–Ø –ø–æ—Å—Ç–∞—Ä–∞–ª—Å—è –ø–æ–∫–∞–∑–∞—Ç—å —à–∏—Ä–æ–∫–∏–π —Å–ø–µ–∫—Ç—Ä —Å–∏—Ç—É–∞—Ü–∏–π, –≥–¥–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ 
`datetime` –º–æ–∂–µ—Ç –æ–∫–∞–∑–∞—Ç—å—Å—è –ø–æ–ª–µ–∑–Ω–æ–π –¥–ª—è –º–µ–±–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞, 
–Ω–æ —Å–ø–∏—Å–æ–∫ –¥–∞–ª–µ–∫–æ –Ω–µ –∏—Å—á–µ—Ä–ø—ã–≤–∞—é—â–∏–π. –°—É—â–µ—Å—Ç–≤—É—é—Ç –¥–µ—Å—è—Ç–∫–∏ –¥—Ä—É–≥–∏—Ö –∫–µ–π—Å–æ–≤, 
–≥–¥–µ –∑–Ω–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã —Å –¥–∞—Ç–∞–º–∏ –∏ –≤—Ä–µ–º–µ–Ω–µ–º —Å—É—â–µ—Å—Ç–≤–µ–Ω–Ω–æ –æ–±–ª–µ–≥—á–∞–µ—Ç 
–ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω—ã–µ –∑–∞–¥–∞—á–∏.

–í–æ—Ç –µ—â–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –∏ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ –ø–æ–ª–µ–∑–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ 
–ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è:

### –ï—â–µ 10 —Å–∏—Ç—É–∞—Ü–∏–π –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è `datetime` –≤ –º–µ–±–µ–ª—å–Ω–æ–º –±–∏–∑–Ω–µ—Å–µ

#### 1. **–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–æ–≤ –ø–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é –∑–∞–∫–∞–∑–æ–≤**
–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∑–∞–∫–∞–∑–æ–≤ –ø–æ –¥–∞—Ç–∞–º –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:
'''
orders = [
    {'id': 1, 'created_at': datetime.datetime(2023, 10, 1)},
    {'id': 2, 'created_at': datetime.datetime(2023, 10, 15)}
]
filtered_orders = [o for o in orders if o['created_at'] > datetime.datetime(2023, 10, 1)]
'''
#### 2. **–ü–æ–¥—Å—á–µ—Ç —Å—Ä–µ–¥–Ω–µ–π –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Ä–µ–º–æ–Ω—Ç–∞**
–ê–Ω–∞–ª–∏–∑ –≤—Ä–µ–º–µ–Ω–∏ —Ä–µ–º–æ–Ω—Ç–∞ –¥–µ—Ñ–µ–∫—Ç–Ω—ã—Ö –∏–∑–¥–µ–ª–∏–π:
'''
repairs = [
    {'started_at': datetime.datetime(2023, 10, 1),
     'ended_at': datetime.datetime(2023, 10, 5)}
]
avg_repair_time = sum((r['ended_at'] - r['started_at']).total_seconds()
                      for r in repairs) / len(repairs)
'''
#### 3. **–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–µ –∞–∫—Ü–∏–∏ –ø–æ —Å–µ–∑–æ–Ω–∞–º**
–ü—Ä–æ–≤–µ–¥–µ–Ω–∏–µ —Å–µ–∑–æ–Ω–Ω—ã—Ö –∞–∫—Ü–∏–π –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ –º–µ—Å—è—Ü—ã:
'''
today = datetime.date.today()
if today.month == 12:
    print("–ê–∫—Ü–∏—è –∑–∏–º–Ω–µ–≥–æ –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–∞!")
'''
#### 4. **–ü—Ä–æ–≥–Ω–æ–∑ –ø—Ä–æ–¥–∞–∂ –ø–æ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–º –¥–∞–Ω–Ω—ã–º**
–ê–Ω–∞–ª–∏–∑ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö –æ –ø—Ä–æ–¥–∞–∂–µ –º–µ–±–µ–ª–∏ –ø–æ –ø–µ—Ä–∏–æ–¥–∞–º:
'''
sales_history = {
    datetime.date(2023, 1, 1): 100,
    datetime.date(2023, 2, 1): 120
}
this_month_sales = sales_history.get(datetime.date.today().replace(day=1))
'''
#### 5. **–°—Ä–∞–≤–Ω–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤ –∫–ª–∏–µ–Ω—Ç–æ–≤**
–í—ã—á–∏—Å–ª–∏—Ç—å —Å—Ä–µ–¥–Ω–∏–π —Å—Ä–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ä–µ–≥–∏–æ–Ω–æ–≤:
'''
orders_by_region = {
    '–ú–æ—Å–∫–≤–∞': [
        {
            'start': datetime.datetime(2023, 10, 1),
            'finish': datetime.datetime(2023, 10, 10)
        }
    ],
    '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥': [
        {
            'start': datetime.datetime(2023, 10, 1),
            'finish': datetime.datetime(2023, 10, 15)
        }
    ]
}
region_delivery_times = {}
for region, orders in orders_by_region.items():
    total_time = sum((o['finish'] - o['start']).days for o in orders)
    avg_time = total_time / len(orders)
    region_delivery_times[region] = avg_time
'''
#### 6. **–ì—Ä–∞—Ñ–∏–∫ —É–±–æ—Ä–∫–∏ –∏ —Å–∞–Ω–∏—Ç–∞—Ä–∏–∏**
–†–µ–≥—É–ª—è—Ä–Ω–∞—è —É–±–æ—Ä–∫–∞ –ø–æ–º–µ—â–µ–Ω–∏–π –∏ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è —Å –ø—Ä–∏–≤—è–∑–∫–æ–π –∫ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é:
'''
cleaning_schedule = datetime.datetime(2023, 10, 1, 10, 0)
next_cleaning = cleaning_schedule + datetime.timedelta(weeks=1)
'''
#### 7. **–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–ø–ª–∞—Ç—ã —Ç—Ä—É–¥–∞**
–ü—Ä–æ—Å–º–æ—Ç—Ä –∑–∞—Ä–ø–ª–∞—Ç–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞ –∏ —Ä–∞—Å—á–µ—Ç –∑–∞—Ä–∞–±–æ—Ç–Ω–æ–π –ø–ª–∞—Ç—ã:
'''
payroll_start = datetime.date(2023, 10, 1)
payroll_end = payroll_start + datetime.timedelta(days=30)
print(f"–ó–∞—Ä–ø–ª–∞—Ç–∞ –Ω–∞—á–∏—Å–ª—è–µ—Ç—Å—è –∑–∞ –ø–µ—Ä–∏–æ–¥ —Å {payroll_start} "
      f"–ø–æ {payroll_end}.")
'''
#### 8. **–ò—Å—Ç–æ—Ä–∏—è –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–π —Ç–æ–≤–∞—Ä–∞**
–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π —Ü–µ–Ω—ã –∏–ª–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –∏–∑–¥–µ–ª–∏—è:
'''
product_modifications = []
product_modifications.append(
    {
        'change_date': datetime.datetime.now(),
        'new_price': 10000
    }
)
'''
#### 9. **–ö–æ–Ω—Ç—Ä–æ–ª—å –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤**
–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—á–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –∏ —É—á–µ—Ç –ø—Ä–æ–ø—É—Å–∫–æ–≤:
'''
employee_checkins = [
    {'employee_id': 1, 'checkin': datetime.datetime(2023, 10, 1, 9, 0)}
]
absent_employees = [emp for emp in employees
                    if all(emp['employee_id'] != checkin['employee_id']
                           for checkin in employee_checkins)]
'''
#### 10. **–ó–∞–∫–∞–∑—ã —Å —É—á–µ—Ç–æ–º –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤**
–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ —Å —É—á–µ—Ç–æ–º –ø—Ä–∞–∑–¥–Ω–∏—á–Ω—ã—Ö –¥–Ω–µ–π:
'''
holiday_dates = [datetime.date(2023, 12, 31)]  # –°–ø–∏—Å–æ–∫ –ø—Ä–∞–∑–¥–Ω–∏—á–Ω—ã—Ö –¥–Ω–µ–π
working_days = [(dt for dt in (datetime.date.today() + datetime.timedelta(n) for n in range(30)) if dt not in holiday_dates])
'''

### –ò—Ç–æ–≥
–í –∑–∞–∫–ª—é—á–µ–Ω–∏–µ —Ö–æ—á—É –ø–æ–¥—á–µ—Ä–∫–Ω—É—Ç—å, —á—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ `datetime` 
–≤ Python –æ–±—à–∏—Ä–Ω—ã –∏ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã. –° –∏—Ö –ø–æ–º–æ—â—å—é –º–æ–∂–Ω–æ —Ä–µ—à–∏—Ç—å –æ–≥—Ä–æ–º–Ω–æ–µ 
–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–¥–∞—á, –±—É–¥—å —Ç–æ —Ä–∞—Å—á–µ—Ç—ã —Å—Ä–æ–∫–æ–≤ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤, –≤–µ–¥–µ–Ω–∏–µ 
–æ—Ç—á–µ—Ç–Ω–æ—Å—Ç–∏, –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–ø–∞—Å–æ–≤ –∏–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–∞–º–∏ –Ω–∞ 
–ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ. –ò–∑—É—á–∏–≤ –∏ –æ—Å–≤–æ–∏–≤ —Ä–∞–±–æ—Ç—É —Å –¥–∞—Ç–∞–º–∏ –∏ –≤—Ä–µ–º–µ–Ω–µ–º, –≤—ã 
–æ—Ç–∫—Ä–æ–µ—Ç–µ –¥–≤–µ—Ä–∏ –∫ –ø–æ–≤—ã—à–µ–Ω–∏—é —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏ –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞.

'''